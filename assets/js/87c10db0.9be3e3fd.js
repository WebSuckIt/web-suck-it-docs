"use strict";(self.webpackChunkwebsuckit_docs=self.webpackChunkwebsuckit_docs||[]).push([[901],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Collaborative Text editor in JS",c={unversionedId:"SDK example quick start/collaborative-text-editor-in-JS",id:"SDK example quick start/collaborative-text-editor-in-JS",title:"Collaborative Text editor in JS",description:"A simple text editor designed to allow collaborators to work on the same file",source:"@site/docs/SDK example quick start/collaborative-text-editor-in-JS.mdx",sourceDirName:"SDK example quick start",slug:"/SDK example quick start/collaborative-text-editor-in-JS",permalink:"/SDK example quick start/collaborative-text-editor-in-JS",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SDK example quick start",permalink:"/category/sdk-example-quick-start"},next:{title:"Minimal Shared Todo app in JS",permalink:"/SDK example quick start/shared-todo-app-in-JS"}},l={},s=[],d={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"collaborative-text-editor-in-js"},"Collaborative Text editor in JS"),(0,a.kt)("p",null,"A simple text editor designed to allow collaborators to work on the same file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/script.js"',title:'"/src/script.js"'},'import Websuckit from "@websuckit/js";\nimport "./styles.css";\n\n// Get PUBLIC_KEY, USER_ID, CHANNEL_PASSKEY, CHANNEL_NAME from dashboard https://websuckit.com/dashboard\nconst config = {\n  publicKey: "PUBLIC_KEY";\n  userId: "USER_ID";\n};\n\n// Websuckit initialization\nconst websuckitInit = new Websuckit({ ...config });\n\n// Get websocket  connection url from Websuckit\nconst connectionUrl = websuckitInit.getConnectionUrl({\n  channelName: "CHANNEL_NAME", // Insert a valid channel name\n  channelPassKey: "CHANNEL_PASSKEY",\n  replaySelf: false,\n}).value;\n\nlet aceEditor = null;\nlet last_applied_change = null;\nlet just_cleared_buffer = null;\naceEditor = ace.edit("aceEditor");\naceEditor.getSession().setValue(\n  `const websuckit = "Realtime interactive Js Code editor with Websuckit"\n  `\n);\naceEditor.setTheme("ace/theme/tomorrow");\naceEditor.getSession().setMode("ace/mode/javascript");\naceEditor.$blockScrolling = Infinity;\n\n// Connect to websocket Url\nconst ws = new WebSocket(connectionUrl);\n\nws.addEventListener("close", (event) => {\n  console.log("The connection has been closed successfully.");\n});\n\nws.addEventListener("open", (event) => {\n  console.log("The connection has been opened successfully.");\n});\n\n//TODO: listen when a user joined and send data\nws.addEventListener("message", (event) => {\n  const delta = JSON.parse(event.data).data;\n  last_applied_change = delta;\n  aceEditor.getSession().getDocument().applyDeltas([delta]);\n});\n\naceEditor.on(\n  "change",\n  function (e) {\n    console.log({ last_applied_change, e }, deepEqual(last_applied_change, e));\n    // TODO, we could make things more efficient and not likely to conflict by keeping track of change IDs\n    if (!deepEqual(last_applied_change, e.data)) {\n      ws.send(JSON.stringify(e));\n      last_applied_change = e.data;\n    }\n    just_cleared_buffer = false;\n  },\n  false\n);\n\njust_cleared_buffer = true;\ndocument.getElementsByTagName("textarea")[0].focus();\njust_cleared_buffer = false;\nlast_applied_change = null;\n\n// Utils to compare object\nfunction deepEqual(x, y) {\n  return x && y && typeof x === "object" && typeof y === "object"\n    ? Object.keys(x).length === Object.keys(y).length &&\n        Object.keys(x).reduce(function (isEqual, key) {\n          return isEqual && deepEqual(x[key], y[key]);\n        }, true)\n    : x === y;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="/src/index.html"',title:'"/src/index.html"'},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Collaborative Text editor in JS</title>\n    <meta charset="UTF-8" />\n\n    <script\n      src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.01/ace.js"\n      type="text/javascript"\n      charset="utf-8"\n    ><\/script>\n  </head>\n  <body>\n    <div id="wrapper">\n      <div id="aceEditor" class="aceEditor"></div>\n    </div>\n\n    <script src="src/index.js"><\/script>\n  </body>\n</html>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="/src/style.css"',title:'"/src/style.css"'},"#aceEditor {\n  width: 100%;\n  height: 100vh;\n  /* margin-left: 10%; */\n  /* margin-right: 10%; */\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: block;\n}\n\ndiv.aceEditor {\n  width: 100%;\n  height: 100%;\n}\n")))}u.isMDXComponent=!0}}]);